name: Merge Game Mappings

on:
  push:
    branches:
      - main
    paths:
      - 'games/**/*.json'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  merge-mappings:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Merge game mappings
        run: |
          # Create merge script
          cat > merge.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          const gamesDir = path.join(__dirname, 'games');
          const outputFile = path.join(__dirname, 'mappings.json');

          // Read all JSON files from games/ directory
          const gameFiles = fs.readdirSync(gamesDir)
            .filter(file => file.endsWith('.json'))
            .sort();

          const mappings = [];

          for (const file of gameFiles) {
            const filePath = path.join(gamesDir, file);
            try {
              const content = fs.readFileSync(filePath, 'utf8');
              const mapping = JSON.parse(content);

              // Validate required fields
              if (!mapping.processName || !mapping.twitchCategoryId || !mapping.twitchCategoryName) {
                console.error(`❌ Invalid mapping in ${file}: missing required fields`);
                process.exit(1);
              }

              // Ensure source field exists
              if (!mapping.source) {
                mapping.source = 'community';
              }

              mappings.push(mapping);
              console.log(`✅ Loaded ${file}: ${mapping.processName} → ${mapping.twitchCategoryName}`);
            } catch (error) {
              console.error(`❌ Error reading ${file}:`, error.message);
              process.exit(1);
            }
          }

          // Sort by processName (case-insensitive)
          mappings.sort((a, b) =>
            a.processName.toLowerCase().localeCompare(b.processName.toLowerCase())
          );

          // Create final structure
          const output = {
            mappings: mappings
          };

          // Write to mappings.json
          fs.writeFileSync(outputFile, JSON.stringify(output, null, 2) + '\n', 'utf8');

          console.log(`\n🎉 Successfully merged ${mappings.length} game mappings into mappings.json`);
          EOF

          # Run merge script
          node merge.js

          # Check if mappings.json changed
          if git diff --quiet mappings.json; then
            echo "No changes to mappings.json"
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "mappings.json has been updated"
            echo "changed=true" >> $GITHUB_ENV
          fi

      - name: Commit and push if changed
        if: env.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add mappings.json
          git commit -m "chore: regenerate mappings.json from games/ directory

          🤖 Auto-generated by merge-mappings workflow"
          git push

      - name: Summary
        run: |
          echo "## Merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Total game files:** $(ls -1 games/*.json | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes:** ${{ env.changed }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ env.changed }}" == "true" ]; then
            echo "✅ mappings.json has been regenerated and committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No changes detected in mappings.json" >> $GITHUB_STEP_SUMMARY
          fi
